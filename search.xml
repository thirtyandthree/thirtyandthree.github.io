<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>动态爱心代码</title>
      <link href="/2023/09/13/love/"/>
      <url>/2023/09/13/love/</url>
      
        <content type="html"><![CDATA[    <p>#动态爱心代码<br>import random<br>from math import sin, cos, pi, log<br>from tkinter import *</p><p>CANVAS_WIDTH = 640<br>CANVAS_HEIGHT = 480<br>CANVAS_CENTER_X = CANVAS_WIDTH / 2<br>CANVAS_CENTER_Y = CANVAS_HEIGHT / 2<br>IMAGE_ENLARGE = 11<br>HEART_COLOR = “#DA8DA7”  # ff2121#DA8DA7#FFC0CB#893198</p><p>def heart_function(t, shrink_ratio: float = IMAGE_ENLARGE):<br>    x = 16 * (sin(t) ** 3)<br>    y = -(13 * cos(t) - 5 * cos(2 * t) - 2 * cos(3 * t) - cos(4 * t))</p><pre><code>x *= shrink_ratioy *= shrink_ratiox += CANVAS_CENTER_Xy += CANVAS_CENTER_Yreturn int(x), int(y)</code></pre><p>def scatter_inside(x, y, beta=0.15):<br>    ratio_x = - beta * log(random.random())<br>    ratio_y = - beta * log(random.random())</p><pre><code>dx = ratio_x * (x - CANVAS_CENTER_X)dy = ratio_y * (y - CANVAS_CENTER_Y)return x - dx, y - dy</code></pre><p>def shrink(x, y, ratio):<br>    force = -1 / (((x - CANVAS_CENTER_X) ** 2 + (y - CANVAS_CENTER_Y) ** 2) ** 0.6)  # 这个参数…<br>    dx = ratio * force * (x - CANVAS_CENTER_X)<br>    dy = ratio * force * (y - CANVAS_CENTER_Y)<br>    return x - dx, y - dy</p><p>def curve(p):<br>    return 2 * (2 * sin(4 * p)) / (2 * pi)</p><p>class Heart:</p><pre><code>def __init__(self, generate_frame=20):    self._points = set()  # 原始爱心坐标集合    self._edge_diffusion_points = set()  # 边缘扩散效果点坐标集合    self._center_diffusion_points = set()  # 中心扩散效果点坐标集合    self.all_points = {}  # 每帧动态点坐标    self.build(2000)    self.random_halo = 1000    self.generate_frame = generate_frame    for frame in range(generate_frame):        self.calc(frame)def build(self, number):    for _ in range(number):        t = random.uniform(0, 2 * pi)        x, y = heart_function(t)        self._points.add((x, y))    for _x, _y in list(self._points):        for _ in range(3):            x, y = scatter_inside(_x, _y, 0.05)            self._edge_diffusion_points.add((x, y))    point_list = list(self._points)    for _ in range(4000):        x, y = random.choice(point_list)        x, y = scatter_inside(x, y, 0.17)        self._center_diffusion_points.add((x, y))@staticmethoddef calc_position(x, y, ratio):    force = 1 / (((x - CANVAS_CENTER_X) ** 2 + (y - CANVAS_CENTER_Y) ** 2) ** 0.520)  # 魔法参数    dx = ratio * force * (x - CANVAS_CENTER_X) + random.randint(-1, 1)    dy = ratio * force * (y - CANVAS_CENTER_Y) + random.randint(-1, 1)    return x - dx, y - dydef calc(self, generate_frame):    ratio = 10 * curve(generate_frame / 10 * pi)  # 圆滑的周期的缩放比例    halo_radius = int(4 + 6 * (1 + curve(generate_frame / 10 * pi)))    halo_number = int(3000 + 4000 * abs(curve(generate_frame / 10 * pi) ** 2))    all_points = []    heart_halo_point = set()    for _ in range(halo_number):        t = random.uniform(0, 2 * pi)        x, y = heart_function(t, shrink_ratio=11.6)        x, y = shrink(x, y, halo_radius)        if (x, y) not in heart_halo_point:            heart_halo_point.add((x, y))            x += random.randint(-14, 14)            y += random.randint(-14, 14)            size = random.choice((1, 2, 2))            all_points.append((x, y, size))    for x, y in self._points:        x, y = self.calc_position(x, y, ratio)        size = random.randint(1, 3)        all_points.append((x, y, size))    for x, y in self._edge_diffusion_points:        x, y = self.calc_position(x, y, ratio)        size = random.randint(1, 2)        all_points.append((x, y, size))    for x, y in self._center_diffusion_points:        x, y = self.calc_position(x, y, ratio)        size = random.randint(1, 2)        all_points.append((x, y, size))    self.all_points[generate_frame] = all_pointsdef render(self, render_canvas, render_frame):    for x, y, size in self.all_points[render_frame % self.generate_frame]:        render_canvas.create_rectangle(x, y, x + size, y + size, width=0, fill=HEART_COLOR)</code></pre><p>def draw(main: Tk, render_canvas: Canvas, render_heart: Heart, render_frame=0):<br>    render_canvas.delete(‘all’)<br>    render_heart.render(render_canvas, render_frame)<br>    main.after(160, draw, main, render_canvas, render_heart, render_frame + 1)</p><p>if <strong>name</strong> == ‘<strong>main</strong>‘:<br>    root = Tk()  # 一个Tk<br>    canvas = Canvas(root, bg=’black’, height=CANVAS_HEIGHT, width=CANVAS_WIDTH)<br>    canvas.pack()<br>    heart = Heart()<br>    draw(root, canvas, heart)<br>    root.mainloop()<br>#动态爱心演示<br><video controls=""><br>  <source src="../video/love.mp4" type="video/mp4"><br>  Your browser does not support the video tag.<br></video></p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/09/09/first/"/>
      <url>/2023/09/09/first/</url>
      
        <content type="html"><![CDATA[<p>一个小白的开端。</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/08/hello-world/"/>
      <url>/2023/09/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
